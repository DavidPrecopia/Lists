apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.example.david.lists"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 10
        versionName "1.4.2"
        resConfig "en"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        releaseOptimized {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
            // Prevents Crashlytics from updating app resources with its own unique build ID.
            // This is not needed for the debug build.
            ext.alwaysUpdateBuildId = false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "com.google.android.material:material:$androidLibraries"
    implementation "androidx.recyclerview:recyclerview:$androidLibraries"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Swipe Reveal Layout
    implementation 'com.chauthai.swipereveallayout:swipe-reveal-layout:1.4.1'

    // LiveData and ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensions"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleExtensions"

    // Firebase
    implementation 'com.google.firebase:firebase-core:16.0.9'
    // Cloud Firestore
    implementation 'com.google.firebase:firebase-firestore:19.0.0'
    // Firebase Authentication
    implementation 'com.google.firebase:firebase-auth:17.0.0'
    implementation 'com.firebaseui:firebase-ui-auth:5.0.0'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    // Firebase Crashlytics
    // This cannot be in the `releaseImplementation` configuration because Crashlytics
    // is referenced in debug code.
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.0'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    // Timber
    debugImplementation 'com.jakewharton.timber:timber:4.7.1'

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:2.0-alpha-2"

    // Local testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.23.4'

    // Instrumentation testing
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
}

apply plugin: 'com.google.gms.google-services'